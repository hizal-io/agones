// Copyright 2022 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package agones.dev.agones.pkg.apis.autoscaling.v1;

import "agones.dev/agones/pkg/apis/agones/v1/generated.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "k8s.io/apimachinery/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option go_package = "agones.dev/agones/pkg/apis/autoscaling/v1";

message ServiceReference {
  // `namespace` is the namespace of the service.
  // Required
  optional string namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  // `name` is the name of the service.
  // Required
  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // `path` is an optional URL path which will be sent in any request to
  // this service.
  // +optional
  optional string path = 3 [(gogoproto.customname) = "Path"];

  // If specified, the port on the service that hosting webhook.
  // Default to 443 for backward compatibility.
  // `port` should be a valid port number (1-65535, inclusive).
  // +optional
  optional int32 port = 4 [(gogoproto.customname) = "Port"];
}

// BufferPolicy controls the desired behavior of the buffer policy.
message BufferPolicy {
  // MaxReplicas is the maximum amount of replicas that the fleet may have.
  // It must be bigger than both MinReplicas and BufferSize
  optional int32 maxReplicas = 1 [(gogoproto.customname) = "MaxReplicas", (gogoproto.nullable) = false];

  // MinReplicas is the minimum amount of replicas that the fleet must have
  // If zero, it is ignored.
  // If non zero, it must be smaller than MaxReplicas and bigger than BufferSize
  optional int32 minReplicas = 2 [(gogoproto.customname) = "MinReplicas", (gogoproto.nullable) = false];

  // BufferSize defines how many replicas the autoscaler tries to have ready all the time
  // Value can be an absolute number (ex: 5) or a percentage of desired gs instances (ex: 15%)
  // Absolute number is calculated from percentage by rounding up.
  // Example: when this is set to 20%, the autoscaler will make sure that 20%
  //   of the fleet's game server replicas are ready. When this is set to 20,
  //   the autoscaler will make sure that there are 20 available game servers
  // Must be bigger than 0
  // Note: by "ready" we understand in this case "non-allocated"; this is done to ensure robustness
  //       and computation stability in different edge case (fleet just created, not enough
  //       capacity in the cluster etc)
  optional k8s.io.apimachinery.pkg.util.intstr.IntOrString bufferSize = 3 [(gogoproto.customname) = "BufferSize", (gogoproto.nullable) = false];
}

// FixedIntervalSync controls the desired behavior of the fixed interval based sync.
message FixedIntervalSync {
  // Seconds defines how often we run fleet autoscaling in seconds
  optional int32 seconds = 1 [(gogoproto.customname) = "Seconds", (gogoproto.nullable) = false];
}

// FleetAutoscaleRequest defines the request to webhook autoscaler endpoint
message FleetAutoscaleRequest {
  // UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are
  // otherwise identical (parallel requests, requests when earlier requests did not modify etc)
  // The UID is meant to track the round trip (request/response) between the Autoscaler and the WebHook, not the user request.
  // It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
  optional string uid = 1 [(gogoproto.casttype) = "k8s.io/apimachinery/pkg/types.UID", (gogoproto.customname) = "UID", (gogoproto.nullable) = false];

  // Name is the name of the Fleet being scaled
  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Namespace is the namespace associated with the request (if any).
  optional string namespace = 3 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  // The Fleet's status values
  optional agones.dev.agones.pkg.apis.agones.v1.FleetStatus status = 4 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// FleetAutoscaleResponse defines the response of webhook autoscaler endpoint
message FleetAutoscaleResponse {
  // UID is an identifier for the individual request/response.
  // This should be copied over from the corresponding FleetAutoscaleRequest.
  optional string uid = 1 [(gogoproto.casttype) = "k8s.io/apimachinery/pkg/types.UID", (gogoproto.customname) = "UID", (gogoproto.nullable) = false];

  // Set to false if no scaling should occur to the Fleet
  optional bool scale = 2 [(gogoproto.customname) = "Scale", (gogoproto.nullable) = false];

  // The targeted replica count
  optional int32 replicas = 3 [(gogoproto.customname) = "Replicas", (gogoproto.nullable) = false];
}

// FleetAutoscaleReview is passed to the webhook with a populated Request value,
// and then returned with a populated Response.
message FleetAutoscaleReview {
  optional FleetAutoscaleRequest request = 1 [(gogoproto.customname) = "Request"];

  optional FleetAutoscaleResponse response = 2 [(gogoproto.customname) = "Response"];
}

// FleetAutoscaler is the data structure for a FleetAutoscaler resource
message FleetAutoscaler {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional FleetAutoscalerSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  optional FleetAutoscalerStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// FleetAutoscalerList is a list of Fleet Scaler resources
message FleetAutoscalerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated FleetAutoscaler items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// FleetAutoscalerPolicy describes how to scale a fleet
message FleetAutoscalerPolicy {
  // Type of autoscaling policy.
  optional string type = 1 [(gogoproto.casttype) = "FleetAutoscalerPolicyType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // Buffer policy config params. Present only if FleetAutoscalerPolicyType = Buffer.
  // +optional
  optional BufferPolicy buffer = 2 [(gogoproto.customname) = "Buffer"];

  // Webhook policy config params. Present only if FleetAutoscalerPolicyType = Webhook.
  // +optional
  optional WebhookPolicy webhook = 3 [(gogoproto.customname) = "Webhook"];
}

// FleetAutoscalerSpec is the spec for a Fleet Scaler
message FleetAutoscalerSpec {
  optional string fleetName = 1 [(gogoproto.customname) = "FleetName", (gogoproto.nullable) = false];

  // Autoscaling policy
  optional FleetAutoscalerPolicy policy = 2 [(gogoproto.customname) = "Policy", (gogoproto.nullable) = false];

  // [Stage:Alpha]
  // [FeatureFlag:CustomFasSyncInterval]
  // Sync defines when FleetAutoscalers runs autoscaling
  // +optional
  optional FleetAutoscalerSync sync = 3 [(gogoproto.customname) = "Sync"];
}

// FleetAutoscalerStatus defines the current status of a FleetAutoscaler
message FleetAutoscalerStatus {
  // CurrentReplicas is the current number of gameserver replicas
  // of the fleet managed by this autoscaler, as last seen by the autoscaler
  optional int32 currentReplicas = 1 [(gogoproto.customname) = "CurrentReplicas", (gogoproto.nullable) = false];

  // DesiredReplicas is the desired number of gameserver replicas
  // of the fleet managed by this autoscaler, as last calculated by the autoscaler
  optional int32 desiredReplicas = 2 [(gogoproto.customname) = "DesiredReplicas", (gogoproto.nullable) = false];

  // lastScaleTime is the last time the FleetAutoscaler scaled the attached fleet,
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastScaleTime = 3 [(gogoproto.customname) = "LastScaleTime"];

  // AbleToScale indicates that we can access the target fleet
  optional bool ableToScale = 4 [(gogoproto.customname) = "AbleToScale", (gogoproto.nullable) = false];

  // ScalingLimited indicates that the calculated scale would be above or below the range
  // defined by MinReplicas and MaxReplicas, and has thus been capped.
  optional bool scalingLimited = 5 [(gogoproto.customname) = "ScalingLimited", (gogoproto.nullable) = false];
}

// FleetAutoscalerSync describes when to sync a fleet
message FleetAutoscalerSync {
  // Type of autoscaling sync.
  optional string type = 1 [(gogoproto.casttype) = "FleetAutoscalerSyncType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // FixedInterval config params. Present only if FleetAutoscalerSyncType = FixedInterval.
  // +optional
  optional FixedIntervalSync fixedInterval = 2 [(gogoproto.customname) = "FixedInterval", (gogoproto.nullable) = false];
}

// WebhookPolicy controls the desired behavior of the webhook policy.
// It contains the description of the webhook autoscaler service
// used to form url which is accessible inside the cluster
message WebhookPolicy {
  // `url` gives the location of the webhook, in standard URL form
  // (`scheme://host:port/path`). Exactly one of `url` or `service`
  // must be specified.
  //
  // The `host` should not refer to a service running in the cluster; use
  // the `service` field instead. The host might be resolved via external
  // DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
  // in-cluster DNS as that would be a layering violation). `host` may
  // also be an IP address.
  //
  // Please note that using `localhost` or `127.0.0.1` as a `host` is
  // risky unless you take great care to run this webhook on all hosts
  // which run an apiserver which might need to make calls to this
  // webhook. Such installs are likely to be non-portable, i.e., not easy
  // to turn up in a new cluster.
  //
  // The scheme must be "https"; the URL must begin with "https://".
  //
  // A path is optional, and if present may be any string permissible in
  // a URL. You may use the path to pass an arbitrary string to the
  // webhook, for example, a cluster identifier.
  //
  // Attempting to use a user or basic auth e.g. "user:password@" is not
  // allowed. Fragments ("#...") and query parameters ("?...") are not
  // allowed, either.
  //
  // +optional
  optional string url = 3 [(gogoproto.customname) = "URL"];

  // `service` is a reference to the service for this webhook. Either
  // `service` or `url` must be specified.
  //
  // If the webhook is running within the cluster, then you should use `service`.
  //
  // +optional
  optional ServiceReference service = 1 [(gogoproto.customname) = "Service"];

  // `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
  // If unspecified, system trust roots on the apiserver are used.
  // +optional
  optional bytes caBundle = 2 [(gogoproto.customname) = "CABundle"];
}

